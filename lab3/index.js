document.addEventListener('DOMContentLoaded', () => {
    let pet = {
        name: '',
        hunger: 50,
        energy: 50,
        health: 100,
        isAlive: true,
        age: 0
    };

    const startGameButton = document.getElementById('startGameBtn');

    startGameButton.addEventListener('click', startGame);

    function startGame() {
        pet.name = prompt('–î–∞–π—Ç–µ –∏–º—è –≤–∞—à–µ–º—É –ø–∏—Ç–æ–º—Ü—É:') || 'noname';
        if (!pet.name.trim()) pet.name = 'noname';

        startGameButton.textContent = `–£—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ ${pet.name}`;
        gameLoop();
    }

    function gameLoop() {
        if (!pet.isAlive) return;

        const action = prompt(`${pet.name}:
        1 - –ü–æ–∫–æ—Ä–º–∏—Ç—å
        2 - –ü–æ–∏–≥—Ä–∞—Ç—å
        3 - –õ–µ—á–∏—Ç—å
        4 - –£–ª–æ–∂–∏—Ç—å —Å–ø–∞—Ç—å
        5 - –°—Ç–∞—Ç—É—Å
        6 - –í—ã—Ö–æ–¥`);

        handleAction(action);
    }

    function handleAction(action) {
        switch(action) {
            case '1':
                if (confirm('–ö—É–ø–∏—Ç—å –µ–¥—É –∑–∞ 10 –∑–¥–æ—Ä–æ–≤—å—è?')) {
                    if (pet.health >= 10) {
                        pet.hunger = Math.max(0, pet.hunger - 30);
                        pet.health -= 10;
                        showAlert(`–ì–æ–ª–æ–¥: -30\n–ó–¥–æ—Ä–æ–≤—å–µ: -10`);
                    } else {
                        showAlert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–¥–æ—Ä–æ–≤—å—è!');
                    }
                }
                break;

            case '2':
                if (confirm('–ò–≥—Ä–∞—Ç—å 30 –º–∏–Ω—É—Ç?')) {
                    if (pet.energy >= 20) {
                        pet.energy -= 20;
                        pet.health = Math.min(100, pet.health + 15);
                        showAlert(`–≠–Ω–µ—Ä–≥–∏—è: -20\n–ó–¥–æ—Ä–æ–≤—å–µ: +15`);
                    } else {
                        showAlert('–ü–∏—Ç–æ–º–µ—Ü —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª!');
                    }
                }
                break;

            case '3':
                if (confirm('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –∑–∞ 50 —ç–Ω–µ—Ä–≥–∏–∏?')) {
                    if (pet.energy >= 50) {
                        pet.energy -= 50;
                        pet.health = Math.min(100, pet.health + 40);
                        showAlert(`–≠–Ω–µ—Ä–≥–∏—è: -50\n–ó–¥–æ—Ä–æ–≤—å–µ: +40`);
                    } else {
                        showAlert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏!');
                    }
                }
                break;

            case '4':
                const hours = parseInt(prompt('–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Å–ø–∞—Ç—å? (1-12)'));
                if (hours && hours >= 1 && hours <= 12) {
                    pet.energy = Math.min(100, pet.energy + hours * 8);
                    pet.hunger = Math.min(100, pet.hunger + hours * 5);
                    showAlert(`–≠–Ω–µ—Ä–≥–∏—è: +${hours*8}\n–ì–æ–ª–æ–¥: +${hours*5}`);
                } else {
                    showAlert('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å–Ω–∞!');
                }
                break;

            case '5':
                showStatus();
                break;

            case '6':
                if (confirm('–¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
                    showAlert('–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
                    return;
                }
                break;

            default:
                showAlert('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!');
                break;
        }

        updateStatus();
        checkConditions();
        if (pet.isAlive) gameLoop();
    }

    function updateStatus() {
        pet.age++;
        pet.hunger = Math.min(100, pet.hunger + 5);
        pet.energy = Math.max(0, pet.energy - 3);

        if (pet.hunger >= 100) pet.health -= 15;
        if (pet.energy <= 0) pet.health -= 10;
    }

    function checkConditions() {
        if (pet.health <= 0) {
            pet.isAlive = false;
            showAlert(`üíÄ ${pet.name} —É–º–µ—Ä –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ ${pet.age} –¥–Ω–µ–π!`);
            startGameButton.textContent = '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ';
            startGameButton.addEventListener('click', () => location.reload());
        }
    }

    function showStatus() {
        alert(`–°–æ—Å—Ç–æ—è–Ω–∏–µ ${pet.name}:
        üçî –ì–æ–ª–æ–¥: ${pet.hunger}%
        ‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è: ${pet.energy}%
        ‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ${pet.health}%
        üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${pet.age} –¥–Ω–µ–π`);
    }

    function showAlert(message) {
        alert(message);
    }
});